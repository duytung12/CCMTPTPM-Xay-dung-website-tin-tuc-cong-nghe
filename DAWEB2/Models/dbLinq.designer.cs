#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAWEB2.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TinTucWeb2")]
	public partial class dbLinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertComMent(ComMent instance);
    partial void UpdateComMent(ComMent instance);
    partial void DeleteComMent(ComMent instance);
    partial void InsertDSMail(DSMail instance);
    partial void UpdateDSMail(DSMail instance);
    partial void DeleteDSMail(DSMail instance);
    partial void InsertLoaiTin(LoaiTin instance);
    partial void UpdateLoaiTin(LoaiTin instance);
    partial void DeleteLoaiTin(LoaiTin instance);
    partial void InsertMessage(Message instance);
    partial void UpdateMessage(Message instance);
    partial void DeleteMessage(Message instance);
    partial void InsertPhanQuyen(PhanQuyen instance);
    partial void UpdatePhanQuyen(PhanQuyen instance);
    partial void DeletePhanQuyen(PhanQuyen instance);
    partial void InsertTin(Tin instance);
    partial void UpdateTin(Tin instance);
    partial void DeleteTin(Tin instance);
    partial void InsertTheLoai(TheLoai instance);
    partial void UpdateTheLoai(TheLoai instance);
    partial void DeleteTheLoai(TheLoai instance);
    partial void InsertTrangWeb(TrangWeb instance);
    partial void UpdateTrangWeb(TrangWeb instance);
    partial void DeleteTrangWeb(TrangWeb instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertVaiTro(VaiTro instance);
    partial void UpdateVaiTro(VaiTro instance);
    partial void DeleteVaiTro(VaiTro instance);
    #endregion
		
		public dbLinqDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TinTucWeb2ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbLinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbLinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbLinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbLinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ComMent> ComMents
		{
			get
			{
				return this.GetTable<ComMent>();
			}
		}
		
		public System.Data.Linq.Table<DSMail> DSMails
		{
			get
			{
				return this.GetTable<DSMail>();
			}
		}
		
		public System.Data.Linq.Table<LoaiTin> LoaiTins
		{
			get
			{
				return this.GetTable<LoaiTin>();
			}
		}
		
		public System.Data.Linq.Table<Message> Messages
		{
			get
			{
				return this.GetTable<Message>();
			}
		}
		
		public System.Data.Linq.Table<PhanQuyen> PhanQuyens
		{
			get
			{
				return this.GetTable<PhanQuyen>();
			}
		}
		
		public System.Data.Linq.Table<Tin> Tins
		{
			get
			{
				return this.GetTable<Tin>();
			}
		}
		
		public System.Data.Linq.Table<TheLoai> TheLoais
		{
			get
			{
				return this.GetTable<TheLoai>();
			}
		}
		
		public System.Data.Linq.Table<TrangWeb> TrangWebs
		{
			get
			{
				return this.GetTable<TrangWeb>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<VaiTro> VaiTros
		{
			get
			{
				return this.GetTable<VaiTro>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ComMent")]
	public partial class ComMent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idComMent;
		
		private string _HoTen;
		
		private string _Email;
		
		private string _NoiDung;
		
		private int _idTin;
		
		private EntityRef<Tin> _Tin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidComMentChanging(int value);
    partial void OnidComMentChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnidTinChanging(int value);
    partial void OnidTinChanged();
    #endregion
		
		public ComMent()
		{
			this._Tin = default(EntityRef<Tin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idComMent", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idComMent
		{
			get
			{
				return this._idComMent;
			}
			set
			{
				if ((this._idComMent != value))
				{
					this.OnidComMentChanging(value);
					this.SendPropertyChanging();
					this._idComMent = value;
					this.SendPropertyChanged("idComMent");
					this.OnidComMentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTin", DbType="Int NOT NULL")]
		public int idTin
		{
			get
			{
				return this._idTin;
			}
			set
			{
				if ((this._idTin != value))
				{
					if (this._Tin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTinChanging(value);
					this.SendPropertyChanging();
					this._idTin = value;
					this.SendPropertyChanged("idTin");
					this.OnidTinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tin_ComMent", Storage="_Tin", ThisKey="idTin", OtherKey="idTin", IsForeignKey=true)]
		public Tin Tin
		{
			get
			{
				return this._Tin.Entity;
			}
			set
			{
				Tin previousValue = this._Tin.Entity;
				if (((previousValue != value) 
							|| (this._Tin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tin.Entity = null;
						previousValue.ComMents.Remove(this);
					}
					this._Tin.Entity = value;
					if ((value != null))
					{
						value.ComMents.Add(this);
						this._idTin = value.idTin;
					}
					else
					{
						this._idTin = default(int);
					}
					this.SendPropertyChanged("Tin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DSMail")]
	public partial class DSMail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idMail;
		
		private string _Email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidMailChanging(int value);
    partial void OnidMailChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public DSMail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMail", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idMail
		{
			get
			{
				return this._idMail;
			}
			set
			{
				if ((this._idMail != value))
				{
					this.OnidMailChanging(value);
					this.SendPropertyChanging();
					this._idMail = value;
					this.SendPropertyChanged("idMail");
					this.OnidMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NChar(30) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiTin")]
	public partial class LoaiTin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idLoaiTin;
		
		private string _Ten;
		
		private string _AnhHien;
		
		private int _idTheLoai;
		
		private EntitySet<Tin> _Tins;
		
		private EntityRef<TheLoai> _TheLoai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidLoaiTinChanging(int value);
    partial void OnidLoaiTinChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnAnhHienChanging(string value);
    partial void OnAnhHienChanged();
    partial void OnidTheLoaiChanging(int value);
    partial void OnidTheLoaiChanged();
    #endregion
		
		public LoaiTin()
		{
			this._Tins = new EntitySet<Tin>(new Action<Tin>(this.attach_Tins), new Action<Tin>(this.detach_Tins));
			this._TheLoai = default(EntityRef<TheLoai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLoaiTin", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idLoaiTin
		{
			get
			{
				return this._idLoaiTin;
			}
			set
			{
				if ((this._idLoaiTin != value))
				{
					this.OnidLoaiTinChanging(value);
					this.SendPropertyChanging();
					this._idLoaiTin = value;
					this.SendPropertyChanged("idLoaiTin");
					this.OnidLoaiTinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhHien", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AnhHien
		{
			get
			{
				return this._AnhHien;
			}
			set
			{
				if ((this._AnhHien != value))
				{
					this.OnAnhHienChanging(value);
					this.SendPropertyChanging();
					this._AnhHien = value;
					this.SendPropertyChanged("AnhHien");
					this.OnAnhHienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTheLoai", DbType="Int NOT NULL")]
		public int idTheLoai
		{
			get
			{
				return this._idTheLoai;
			}
			set
			{
				if ((this._idTheLoai != value))
				{
					if (this._TheLoai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._idTheLoai = value;
					this.SendPropertyChanged("idTheLoai");
					this.OnidTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTin_Tin", Storage="_Tins", ThisKey="idLoaiTin", OtherKey="idLoaiTin")]
		public EntitySet<Tin> Tins
		{
			get
			{
				return this._Tins;
			}
			set
			{
				this._Tins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_LoaiTin", Storage="_TheLoai", ThisKey="idTheLoai", OtherKey="idTheLoai", IsForeignKey=true)]
		public TheLoai TheLoai
		{
			get
			{
				return this._TheLoai.Entity;
			}
			set
			{
				TheLoai previousValue = this._TheLoai.Entity;
				if (((previousValue != value) 
							|| (this._TheLoai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TheLoai.Entity = null;
						previousValue.LoaiTins.Remove(this);
					}
					this._TheLoai.Entity = value;
					if ((value != null))
					{
						value.LoaiTins.Add(this);
						this._idTheLoai = value.idTheLoai;
					}
					else
					{
						this._idTheLoai = default(int);
					}
					this.SendPropertyChanged("TheLoai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tins(Tin entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTin = this;
		}
		
		private void detach_Tins(Tin entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Message")]
	public partial class Message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idMes;
		
		private string _Hoten;
		
		private string _Email;
		
		private string _Mess;
		
		private System.Nullable<bool> _TinhTrang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidMesChanging(int value);
    partial void OnidMesChanged();
    partial void OnHotenChanging(string value);
    partial void OnHotenChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMessChanging(string value);
    partial void OnMessChanged();
    partial void OnTinhTrangChanging(System.Nullable<bool> value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public Message()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMes", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idMes
		{
			get
			{
				return this._idMes;
			}
			set
			{
				if ((this._idMes != value))
				{
					this.OnidMesChanging(value);
					this.SendPropertyChanging();
					this._idMes = value;
					this.SendPropertyChanged("idMes");
					this.OnidMesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hoten", DbType="NVarChar(50)")]
		public string Hoten
		{
			get
			{
				return this._Hoten;
			}
			set
			{
				if ((this._Hoten != value))
				{
					this.OnHotenChanging(value);
					this.SendPropertyChanging();
					this._Hoten = value;
					this.SendPropertyChanged("Hoten");
					this.OnHotenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mess", DbType="NVarChar(MAX)")]
		public string Mess
		{
			get
			{
				return this._Mess;
			}
			set
			{
				if ((this._Mess != value))
				{
					this.OnMessChanging(value);
					this.SendPropertyChanging();
					this._Mess = value;
					this.SendPropertyChanged("Mess");
					this.OnMessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit")]
		public System.Nullable<bool> TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanQuyen")]
	public partial class PhanQuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPQ;
		
		private int _MaVT;
		
		private int _MaTW;
		
		private bool _DuocPhep;
		
		private EntityRef<TrangWeb> _TrangWeb;
		
		private EntityRef<VaiTro> _VaiTro;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPQChanging(int value);
    partial void OnMaPQChanged();
    partial void OnMaVTChanging(int value);
    partial void OnMaVTChanged();
    partial void OnMaTWChanging(int value);
    partial void OnMaTWChanged();
    partial void OnDuocPhepChanging(bool value);
    partial void OnDuocPhepChanged();
    #endregion
		
		public PhanQuyen()
		{
			this._TrangWeb = default(EntityRef<TrangWeb>);
			this._VaiTro = default(EntityRef<VaiTro>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPQ", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaPQ
		{
			get
			{
				return this._MaPQ;
			}
			set
			{
				if ((this._MaPQ != value))
				{
					this.OnMaPQChanging(value);
					this.SendPropertyChanging();
					this._MaPQ = value;
					this.SendPropertyChanged("MaPQ");
					this.OnMaPQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaVT", DbType="Int NOT NULL")]
		public int MaVT
		{
			get
			{
				return this._MaVT;
			}
			set
			{
				if ((this._MaVT != value))
				{
					if (this._VaiTro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaVTChanging(value);
					this.SendPropertyChanging();
					this._MaVT = value;
					this.SendPropertyChanged("MaVT");
					this.OnMaVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTW", DbType="Int NOT NULL")]
		public int MaTW
		{
			get
			{
				return this._MaTW;
			}
			set
			{
				if ((this._MaTW != value))
				{
					if (this._TrangWeb.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTWChanging(value);
					this.SendPropertyChanging();
					this._MaTW = value;
					this.SendPropertyChanged("MaTW");
					this.OnMaTWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DuocPhep", DbType="Bit NOT NULL")]
		public bool DuocPhep
		{
			get
			{
				return this._DuocPhep;
			}
			set
			{
				if ((this._DuocPhep != value))
				{
					this.OnDuocPhepChanging(value);
					this.SendPropertyChanging();
					this._DuocPhep = value;
					this.SendPropertyChanged("DuocPhep");
					this.OnDuocPhepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrangWeb_PhanQuyen", Storage="_TrangWeb", ThisKey="MaTW", OtherKey="MaTW", IsForeignKey=true)]
		public TrangWeb TrangWeb
		{
			get
			{
				return this._TrangWeb.Entity;
			}
			set
			{
				TrangWeb previousValue = this._TrangWeb.Entity;
				if (((previousValue != value) 
							|| (this._TrangWeb.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrangWeb.Entity = null;
						previousValue.PhanQuyens.Remove(this);
					}
					this._TrangWeb.Entity = value;
					if ((value != null))
					{
						value.PhanQuyens.Add(this);
						this._MaTW = value.MaTW;
					}
					else
					{
						this._MaTW = default(int);
					}
					this.SendPropertyChanged("TrangWeb");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VaiTro_PhanQuyen", Storage="_VaiTro", ThisKey="MaVT", OtherKey="MaVT", IsForeignKey=true)]
		public VaiTro VaiTro
		{
			get
			{
				return this._VaiTro.Entity;
			}
			set
			{
				VaiTro previousValue = this._VaiTro.Entity;
				if (((previousValue != value) 
							|| (this._VaiTro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VaiTro.Entity = null;
						previousValue.PhanQuyens.Remove(this);
					}
					this._VaiTro.Entity = value;
					if ((value != null))
					{
						value.PhanQuyens.Add(this);
						this._MaVT = value.MaVT;
					}
					else
					{
						this._MaVT = default(int);
					}
					this.SendPropertyChanged("VaiTro");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tin")]
	public partial class Tin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTin;
		
		private string _TieuDe;
		
		private string _TomTat;
		
		private string _urlHinh;
		
		private System.DateTime _Ngay;
		
		private string _idUser;
		
		private string _NoiDung;
		
		private int _idLoaiTin;
		
		private int _idTheLoai;
		
		private int _SoLanXem;
		
		private bool _TinNoiBat;
		
		private string _AnhHien;
		
		private EntitySet<ComMent> _ComMents;
		
		private EntityRef<LoaiTin> _LoaiTin;
		
		private EntityRef<TheLoai> _TheLoai;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTinChanging(int value);
    partial void OnidTinChanged();
    partial void OnTieuDeChanging(string value);
    partial void OnTieuDeChanged();
    partial void OnTomTatChanging(string value);
    partial void OnTomTatChanged();
    partial void OnurlHinhChanging(string value);
    partial void OnurlHinhChanged();
    partial void OnNgayChanging(System.DateTime value);
    partial void OnNgayChanged();
    partial void OnidUserChanging(string value);
    partial void OnidUserChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnidLoaiTinChanging(int value);
    partial void OnidLoaiTinChanged();
    partial void OnidTheLoaiChanging(int value);
    partial void OnidTheLoaiChanged();
    partial void OnSoLanXemChanging(int value);
    partial void OnSoLanXemChanged();
    partial void OnTinNoiBatChanging(bool value);
    partial void OnTinNoiBatChanged();
    partial void OnAnhHienChanging(string value);
    partial void OnAnhHienChanged();
    #endregion
		
		public Tin()
		{
			this._ComMents = new EntitySet<ComMent>(new Action<ComMent>(this.attach_ComMents), new Action<ComMent>(this.detach_ComMents));
			this._LoaiTin = default(EntityRef<LoaiTin>);
			this._TheLoai = default(EntityRef<TheLoai>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTin", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTin
		{
			get
			{
				return this._idTin;
			}
			set
			{
				if ((this._idTin != value))
				{
					this.OnidTinChanging(value);
					this.SendPropertyChanging();
					this._idTin = value;
					this.SendPropertyChanged("idTin");
					this.OnidTinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TieuDe", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TieuDe
		{
			get
			{
				return this._TieuDe;
			}
			set
			{
				if ((this._TieuDe != value))
				{
					this.OnTieuDeChanging(value);
					this.SendPropertyChanging();
					this._TieuDe = value;
					this.SendPropertyChanged("TieuDe");
					this.OnTieuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TomTat", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TomTat
		{
			get
			{
				return this._TomTat;
			}
			set
			{
				if ((this._TomTat != value))
				{
					this.OnTomTatChanging(value);
					this.SendPropertyChanging();
					this._TomTat = value;
					this.SendPropertyChanged("TomTat");
					this.OnTomTatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_urlHinh", DbType="NVarChar(100)")]
		public string urlHinh
		{
			get
			{
				return this._urlHinh;
			}
			set
			{
				if ((this._urlHinh != value))
				{
					this.OnurlHinhChanging(value);
					this.SendPropertyChanging();
					this._urlHinh = value;
					this.SendPropertyChanged("urlHinh");
					this.OnurlHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="Date NOT NULL")]
		public System.DateTime Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLoaiTin", DbType="Int NOT NULL")]
		public int idLoaiTin
		{
			get
			{
				return this._idLoaiTin;
			}
			set
			{
				if ((this._idLoaiTin != value))
				{
					if (this._LoaiTin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidLoaiTinChanging(value);
					this.SendPropertyChanging();
					this._idLoaiTin = value;
					this.SendPropertyChanged("idLoaiTin");
					this.OnidLoaiTinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTheLoai", DbType="Int NOT NULL")]
		public int idTheLoai
		{
			get
			{
				return this._idTheLoai;
			}
			set
			{
				if ((this._idTheLoai != value))
				{
					if (this._TheLoai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._idTheLoai = value;
					this.SendPropertyChanged("idTheLoai");
					this.OnidTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLanXem", DbType="Int NOT NULL")]
		public int SoLanXem
		{
			get
			{
				return this._SoLanXem;
			}
			set
			{
				if ((this._SoLanXem != value))
				{
					this.OnSoLanXemChanging(value);
					this.SendPropertyChanging();
					this._SoLanXem = value;
					this.SendPropertyChanged("SoLanXem");
					this.OnSoLanXemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinNoiBat", DbType="Bit NOT NULL")]
		public bool TinNoiBat
		{
			get
			{
				return this._TinNoiBat;
			}
			set
			{
				if ((this._TinNoiBat != value))
				{
					this.OnTinNoiBatChanging(value);
					this.SendPropertyChanging();
					this._TinNoiBat = value;
					this.SendPropertyChanged("TinNoiBat");
					this.OnTinNoiBatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhHien", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AnhHien
		{
			get
			{
				return this._AnhHien;
			}
			set
			{
				if ((this._AnhHien != value))
				{
					this.OnAnhHienChanging(value);
					this.SendPropertyChanging();
					this._AnhHien = value;
					this.SendPropertyChanged("AnhHien");
					this.OnAnhHienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tin_ComMent", Storage="_ComMents", ThisKey="idTin", OtherKey="idTin")]
		public EntitySet<ComMent> ComMents
		{
			get
			{
				return this._ComMents;
			}
			set
			{
				this._ComMents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTin_Tin", Storage="_LoaiTin", ThisKey="idLoaiTin", OtherKey="idLoaiTin", IsForeignKey=true)]
		public LoaiTin LoaiTin
		{
			get
			{
				return this._LoaiTin.Entity;
			}
			set
			{
				LoaiTin previousValue = this._LoaiTin.Entity;
				if (((previousValue != value) 
							|| (this._LoaiTin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiTin.Entity = null;
						previousValue.Tins.Remove(this);
					}
					this._LoaiTin.Entity = value;
					if ((value != null))
					{
						value.Tins.Add(this);
						this._idLoaiTin = value.idLoaiTin;
					}
					else
					{
						this._idLoaiTin = default(int);
					}
					this.SendPropertyChanged("LoaiTin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_Tin", Storage="_TheLoai", ThisKey="idTheLoai", OtherKey="idTheLoai", IsForeignKey=true)]
		public TheLoai TheLoai
		{
			get
			{
				return this._TheLoai.Entity;
			}
			set
			{
				TheLoai previousValue = this._TheLoai.Entity;
				if (((previousValue != value) 
							|| (this._TheLoai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TheLoai.Entity = null;
						previousValue.Tins.Remove(this);
					}
					this._TheLoai.Entity = value;
					if ((value != null))
					{
						value.Tins.Add(this);
						this._idTheLoai = value.idTheLoai;
					}
					else
					{
						this._idTheLoai = default(int);
					}
					this.SendPropertyChanged("TheLoai");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Tin", Storage="_User", ThisKey="idUser", OtherKey="idUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Tins.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Tins.Add(this);
						this._idUser = value.idUser;
					}
					else
					{
						this._idUser = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ComMents(ComMent entity)
		{
			this.SendPropertyChanging();
			entity.Tin = this;
		}
		
		private void detach_ComMents(ComMent entity)
		{
			this.SendPropertyChanging();
			entity.Tin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TheLoai")]
	public partial class TheLoai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTheLoai;
		
		private string _TenTheLoai;
		
		private string _AnhHien;
		
		private EntitySet<LoaiTin> _LoaiTins;
		
		private EntitySet<Tin> _Tins;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTheLoaiChanging(int value);
    partial void OnidTheLoaiChanged();
    partial void OnTenTheLoaiChanging(string value);
    partial void OnTenTheLoaiChanged();
    partial void OnAnhHienChanging(string value);
    partial void OnAnhHienChanged();
    #endregion
		
		public TheLoai()
		{
			this._LoaiTins = new EntitySet<LoaiTin>(new Action<LoaiTin>(this.attach_LoaiTins), new Action<LoaiTin>(this.detach_LoaiTins));
			this._Tins = new EntitySet<Tin>(new Action<Tin>(this.attach_Tins), new Action<Tin>(this.detach_Tins));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTheLoai", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTheLoai
		{
			get
			{
				return this._idTheLoai;
			}
			set
			{
				if ((this._idTheLoai != value))
				{
					this.OnidTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._idTheLoai = value;
					this.SendPropertyChanged("idTheLoai");
					this.OnidTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTheLoai", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenTheLoai
		{
			get
			{
				return this._TenTheLoai;
			}
			set
			{
				if ((this._TenTheLoai != value))
				{
					this.OnTenTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenTheLoai = value;
					this.SendPropertyChanged("TenTheLoai");
					this.OnTenTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhHien", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AnhHien
		{
			get
			{
				return this._AnhHien;
			}
			set
			{
				if ((this._AnhHien != value))
				{
					this.OnAnhHienChanging(value);
					this.SendPropertyChanging();
					this._AnhHien = value;
					this.SendPropertyChanged("AnhHien");
					this.OnAnhHienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_LoaiTin", Storage="_LoaiTins", ThisKey="idTheLoai", OtherKey="idTheLoai")]
		public EntitySet<LoaiTin> LoaiTins
		{
			get
			{
				return this._LoaiTins;
			}
			set
			{
				this._LoaiTins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_Tin", Storage="_Tins", ThisKey="idTheLoai", OtherKey="idTheLoai")]
		public EntitySet<Tin> Tins
		{
			get
			{
				return this._Tins;
			}
			set
			{
				this._Tins.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LoaiTins(LoaiTin entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = this;
		}
		
		private void detach_LoaiTins(LoaiTin entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = null;
		}
		
		private void attach_Tins(Tin entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = this;
		}
		
		private void detach_Tins(Tin entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrangWeb")]
	public partial class TrangWeb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTW;
		
		private string _TenTW;
		
		private string _MoTa;
		
		private EntitySet<PhanQuyen> _PhanQuyens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTWChanging(int value);
    partial void OnMaTWChanged();
    partial void OnTenTWChanging(string value);
    partial void OnTenTWChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
		
		public TrangWeb()
		{
			this._PhanQuyens = new EntitySet<PhanQuyen>(new Action<PhanQuyen>(this.attach_PhanQuyens), new Action<PhanQuyen>(this.detach_PhanQuyens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTW", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaTW
		{
			get
			{
				return this._MaTW;
			}
			set
			{
				if ((this._MaTW != value))
				{
					this.OnMaTWChanging(value);
					this.SendPropertyChanging();
					this._MaTW = value;
					this.SendPropertyChanged("MaTW");
					this.OnMaTWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTW", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenTW
		{
			get
			{
				return this._TenTW;
			}
			set
			{
				if ((this._TenTW != value))
				{
					this.OnTenTWChanging(value);
					this.SendPropertyChanging();
					this._TenTW = value;
					this.SendPropertyChanged("TenTW");
					this.OnTenTWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrangWeb_PhanQuyen", Storage="_PhanQuyens", ThisKey="MaTW", OtherKey="MaTW")]
		public EntitySet<PhanQuyen> PhanQuyens
		{
			get
			{
				return this._PhanQuyens;
			}
			set
			{
				this._PhanQuyens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhanQuyens(PhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.TrangWeb = this;
		}
		
		private void detach_PhanQuyens(PhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.TrangWeb = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idUser;
		
		private string _HoTen;
		
		private string _MatKhau;
		
		private string _DiaChi;
		
		private string _DienThoai;
		
		private string _Email;
		
		private System.DateTime _NgayDangKi;
		
		private int _idGroup;
		
		private System.DateTime _NgaySinh;
		
		private bool _GioiTinh;
		
		private bool _Active;
		
		private System.Nullable<int> _MaVT;
		
		private EntitySet<Tin> _Tins;
		
		private EntityRef<VaiTro> _VaiTro;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUserChanging(string value);
    partial void OnidUserChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNgayDangKiChanging(System.DateTime value);
    partial void OnNgayDangKiChanged();
    partial void OnidGroupChanging(int value);
    partial void OnidGroupChanged();
    partial void OnNgaySinhChanging(System.DateTime value);
    partial void OnNgaySinhChanged();
    partial void OnGioiTinhChanging(bool value);
    partial void OnGioiTinhChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnMaVTChanging(System.Nullable<int> value);
    partial void OnMaVTChanged();
    #endregion
		
		public User()
		{
			this._Tins = new EntitySet<Tin>(new Action<Tin>(this.attach_Tins), new Action<Tin>(this.detach_Tins));
			this._VaiTro = default(EntityRef<VaiTro>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDangKi", DbType="Date NOT NULL")]
		public System.DateTime NgayDangKi
		{
			get
			{
				return this._NgayDangKi;
			}
			set
			{
				if ((this._NgayDangKi != value))
				{
					this.OnNgayDangKiChanging(value);
					this.SendPropertyChanging();
					this._NgayDangKi = value;
					this.SendPropertyChanged("NgayDangKi");
					this.OnNgayDangKiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGroup", DbType="Int NOT NULL")]
		public int idGroup
		{
			get
			{
				return this._idGroup;
			}
			set
			{
				if ((this._idGroup != value))
				{
					this.OnidGroupChanging(value);
					this.SendPropertyChanging();
					this._idGroup = value;
					this.SendPropertyChanged("idGroup");
					this.OnidGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date NOT NULL")]
		public System.DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Bit NOT NULL")]
		public bool GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaVT", DbType="Int")]
		public System.Nullable<int> MaVT
		{
			get
			{
				return this._MaVT;
			}
			set
			{
				if ((this._MaVT != value))
				{
					if (this._VaiTro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaVTChanging(value);
					this.SendPropertyChanging();
					this._MaVT = value;
					this.SendPropertyChanged("MaVT");
					this.OnMaVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Tin", Storage="_Tins", ThisKey="idUser", OtherKey="idUser")]
		public EntitySet<Tin> Tins
		{
			get
			{
				return this._Tins;
			}
			set
			{
				this._Tins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VaiTro_User", Storage="_VaiTro", ThisKey="MaVT", OtherKey="MaVT", IsForeignKey=true)]
		public VaiTro VaiTro
		{
			get
			{
				return this._VaiTro.Entity;
			}
			set
			{
				VaiTro previousValue = this._VaiTro.Entity;
				if (((previousValue != value) 
							|| (this._VaiTro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VaiTro.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._VaiTro.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._MaVT = value.MaVT;
					}
					else
					{
						this._MaVT = default(Nullable<int>);
					}
					this.SendPropertyChanged("VaiTro");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tins(Tin entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Tins(Tin entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VaiTro")]
	public partial class VaiTro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaVT;
		
		private string _TenVT;
		
		private string _MoTa;
		
		private EntitySet<PhanQuyen> _PhanQuyens;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaVTChanging(int value);
    partial void OnMaVTChanged();
    partial void OnTenVTChanging(string value);
    partial void OnTenVTChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
		
		public VaiTro()
		{
			this._PhanQuyens = new EntitySet<PhanQuyen>(new Action<PhanQuyen>(this.attach_PhanQuyens), new Action<PhanQuyen>(this.detach_PhanQuyens));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaVT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaVT
		{
			get
			{
				return this._MaVT;
			}
			set
			{
				if ((this._MaVT != value))
				{
					this.OnMaVTChanging(value);
					this.SendPropertyChanging();
					this._MaVT = value;
					this.SendPropertyChanged("MaVT");
					this.OnMaVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenVT", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenVT
		{
			get
			{
				return this._TenVT;
			}
			set
			{
				if ((this._TenVT != value))
				{
					this.OnTenVTChanging(value);
					this.SendPropertyChanging();
					this._TenVT = value;
					this.SendPropertyChanged("TenVT");
					this.OnTenVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(100)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VaiTro_PhanQuyen", Storage="_PhanQuyens", ThisKey="MaVT", OtherKey="MaVT")]
		public EntitySet<PhanQuyen> PhanQuyens
		{
			get
			{
				return this._PhanQuyens;
			}
			set
			{
				this._PhanQuyens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VaiTro_User", Storage="_Users", ThisKey="MaVT", OtherKey="MaVT")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhanQuyens(PhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.VaiTro = this;
		}
		
		private void detach_PhanQuyens(PhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.VaiTro = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.VaiTro = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.VaiTro = null;
		}
	}
}
#pragma warning restore 1591
